---
import Search from "@/components/Search.astro";
import ThemeToggle from "@/components/ThemeToggle.astro";
import { menuLinks } from "@/site.config";
import { services } from "@/data/services";
import { siteConfig } from "../../site.config";
---

<header
  class="group sticky top-6 z-40 mb-16"
  id="main-header"
>
  <div
    class="relative flex items-center gap-3 rounded-full border border-[var(--color-border)] bg-[var(--color-surface-muted)] px-5 py-3 shadow-[0_28px_45px_-30px_rgba(34,23,12,0.45)] backdrop-blur-lg sm:px-8"
  >
    <div class="flex flex-1 items-center gap-3">
      <a
        aria-current={Astro.url.pathname === "/" ? "page" : false}
        class="inline-flex items-center gap-3 text-sm uppercase tracking-[0.22em] text-[var(--color-muted)] transition hover:text-[var(--color-global-text)]"
        href="/"
      >
        <span class="flex h-10 w-10 items-center justify-center rounded-full bg-[var(--color-accent-soft)] text-[var(--color-accent)] shadow-[inset_0_0_0_1px_var(--color-border)]">
          <svg
            aria-hidden="true"
            class="h-4 w-4"
            fill="none"
            focusable="false"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path d="m4 16 8-12 8 12" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" />
            <path d="M4 16h16l-8 6-8-6Z" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" />
          </svg>
        </span>
        <span class="text-[var(--color-global-text)] font-semibold tracking-[0.25em]">
          {siteConfig.title}
        </span>
      </a>
    </div>

    <nav
      aria-label="Primary navigation"
      class="absolute right-0 top-full z-40 hidden min-w-[220px] translate-y-4 flex-col gap-2 rounded-2xl border border-[var(--color-border)] bg-[var(--color-surface)] p-4 text-sm shadow-[0_32px_60px_-40px_rgba(16,9,4,0.65)] group-[.menu-open]:flex sm:static sm:min-w-0 sm:translate-y-0 sm:flex sm:flex-row sm:items-center sm:gap-6 sm:border-0 sm:bg-transparent sm:p-0 sm:shadow-none"
      id="navigation-menu"
    >
      {
        menuLinks.map((link) => {
          const isServices = link.path === "/services/";
          if (!isServices) {
            return (
              <a
                aria-current={Astro.url.pathname === link.path ? "page" : false}
                class="px-3 py-2 text-xs font-semibold uppercase tracking-[0.3em] text-[var(--color-muted)] transition hover:text-[var(--color-global-text)] sm:px-0 sm:py-0"
                data-astro-prefetch
                href={link.path}
              >
                {link.title}
              </a>
            );
          }

          const servicesActive = Astro.url.pathname.startsWith("/services/");
          return (
            <div class="group/services relative">
              <a
                aria-current={servicesActive ? "page" : false}
                class="inline-flex items-center gap-2 px-3 py-2 text-xs font-semibold uppercase tracking-[0.3em] text-[var(--color-muted)] transition hover:text-[var(--color-global-text)] sm:px-0 sm:py-0"
                data-astro-prefetch
                href={link.path}
              >
                {link.title}
                <svg aria-hidden="true" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" class="mt-[2px]">
                  <path d="M6 9l6 6 6-6" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
              </a>

              <div class="bg-[var(--color-surface)] absolute right-0 z-50 hidden min-w-[240px] translate-y-3 rounded-2xl border border-[var(--color-border)] p-3 shadow-[0_28px_60px_-36px_rgba(18,10,4,0.65)] backdrop-blur-md group-hover/services:block sm:group-hover/services:block sm:focus-within:block">
                {services.map((s) => (
                  <a
                    href={s.path}
                    class="block rounded-xl px-3 py-2 text-[13px] font-medium tracking-wide text-[var(--color-muted)] transition hover:bg-[var(--color-accent-soft)] hover:text-[var(--color-global-text)]"
                    data-astro-prefetch
                  >
                    {s.title}
                  </a>
                ))}
              </div>

              <div class="mt-2 flex flex-col gap-1 sm:hidden">
                {services.map((s) => (
                  <a
                    href={s.path}
                    class="block rounded-xl px-3 py-2 text-[13px] font-medium tracking-wide text-[var(--color-muted)] transition hover:bg-[var(--color-accent-soft)] hover:text-[var(--color-global-text)]"
                    data-astro-prefetch
                  >
                    {s.title}
                  </a>
                ))}
              </div>
            </div>
          );
        })
      }
    </nav>

    <div class="hidden items-center gap-3 md:flex">
      <Search />
      <ThemeToggle />
    </div>
    <div class="flex items-center gap-2 md:hidden">
      <ThemeToggle />
      <mobile-button>
        <button
          aria-expanded="false"
          aria-haspopup="menu"
          class="group relative h-9 w-9 rounded-full border border-[var(--color-border)] bg-[var(--color-surface)]"
          id="toggle-navigation-menu"
          type="button"
        >
          <span class="sr-only">Toggle navigation</span>
          <svg
            aria-hidden="true"
            class="absolute left-1/2 top-1/2 h-5 w-5 -translate-x-1/2 -translate-y-1/2 transition-all group-aria-expanded:scale-0 group-aria-expanded:opacity-0"
            fill="none"
            focusable="false"
            stroke="currentColor"
            stroke-width="1.5"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path d="M4 9h16M4 15h16" stroke-linecap="round" stroke-linejoin="round"></path>
          </svg>
          <svg
            aria-hidden="true"
            class="text-[var(--color-accent)] absolute left-1/2 top-1/2 h-5 w-5 -translate-x-1/2 -translate-y-1/2 scale-0 opacity-0 transition-all group-aria-expanded:scale-100 group-aria-expanded:opacity-100"
            fill="none"
            focusable="false"
            stroke="currentColor"
            stroke-width="1.5"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path d="M6 18 18 6M6 6l12 12" stroke-linecap="round" stroke-linejoin="round"></path>
          </svg>
        </button>
      </mobile-button>
    </div>
  </div>
</header>

<script>
  import { toggleClass } from "@/utils/domElement";

  class MobileNavBtn extends HTMLElement {
    #menuOpen: boolean = false;

    connectedCallback() {
      const headerEl = document.getElementById("main-header")!;
      const mobileButtonEl = this.querySelector<HTMLButtonElement>("button");

      mobileButtonEl?.addEventListener("click", () => {
        if (headerEl) toggleClass(headerEl, "menu-open");
        this.#menuOpen = !this.#menuOpen;
        mobileButtonEl.setAttribute("aria-expanded", this.#menuOpen.toString());
      });
    }
  }

  customElements.define("mobile-button", MobileNavBtn);
</script>
